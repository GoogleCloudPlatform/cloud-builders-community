steps:

- name: 'gcr.io/cloud-builders/docker'
  id: build_base_image
  args: 
  - 'build'
  - '--tag=gcr.io/$PROJECT_ID/cache:${_VERSION}'
  - '--tag=gcr.io/$PROJECT_ID/cache:latest'
  - '--file=Dockerfile-base'
  - '.'

- name: 'gcr.io/cloud-builders/docker'
  id: build_save_cache
  args: 
  - 'build'
  - '--tag=gcr.io/$PROJECT_ID/save_cache:${_VERSION}'
  - '--tag=gcr.io/$PROJECT_ID/save_cache:latest'
  - '--file=Dockerfile-save'
  - '--build-arg=project_id=$PROJECT_ID'
  - '--cache-from=gcr.io/$PROJECT_ID/cache:latest'
  - '.'

- name: 'gcr.io/cloud-builders/docker'
  id: build_restore_cache
  args: 
  - 'build'
  - '--tag=gcr.io/$PROJECT_ID/restore_cache:${_VERSION}'
  - '--tag=gcr.io/$PROJECT_ID/restore_cache:latest'
  - '--file=Dockerfile-restore'
  - '--build-arg=project_id=$PROJECT_ID'
  - '--cache-from=gcr.io/$PROJECT_ID/cache:latest'
  - '.'

# Test the script
- name: 'gcr.io/cloud-builders/gsutil'
  id: setup_test
  entrypoint: 'bash'
  args: 
  - '-c'
  - |
    echo "Creating test cache file structure."
    mkdir -p /original/folder1 /original/folder2/subfolder3 rel_folder
    touch /original/folder1/file1.txt
    touch /original/folder1/file2.txt
    touch /original/folder2/ignore.txt
    touch /original/folder2/subfolder3/file1.txt
    touch rel_folder/file3.txt
  volumes:
  - name: original
    path: /original

- name: 'gcr.io/$PROJECT_ID/save_cache'
  id: save_cache
  args:
  - '--out=/cached'
  - '--key=simple-key-$( checksum cloudbuild.yaml )'
  - '--path=/original/folder1'
  - '--path=/original/folder2/subfolder3'
  - '--path=rel_folder'
  volumes:
  - name: original
    path: /original
  - name: cached
    path: /cached

- name: 'gcr.io/$PROJECT_ID/save_cache'
  id: verify_cache
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    echo "Verifying cache file exists."

    cache_file="/cached/simple-key-$( checksum cloudbuild.yaml ).tgz"
    if [[ ! -f "${cache_file}" ]];then
      echo "Missing cache file at ${cache_file}"
      echo "Contents:"
      echo "$(ls -al /cached)"
      exit 1
    fi

    echo "Cache tests passed."
  volumes:
  - name: cached
    path: /cached

- name: 'gcr.io/cloud-builders/gsutil'
  id: clean_cache
  entrypoint: bash
  args:
  - -c
  - |
    echo "Clearing original files..."
    rm -rf /original/*
    rm -rf rel_folder/
  volumes:
  - name: original
    path: /original

- name: 'gcr.io/$PROJECT_ID/restore_cache'
  id: restore_cache
  args:
  - '--src=/cached'
  - '--key=simple-key-$( checksum cloudbuild.yaml )'
  volumes:
  - name: original
    path: /original
  - name: cached
    path: /cached

- name: 'gcr.io/cloud-builders/gsutil'
  id: verify_restore
  entrypoint: bash
  args:
  - '-c'
  - |
    test -f /original/folder1/file1.txt
    test -f /original/folder1/file2.txt
    test -f /original/folder2/ignore.txt
    test -f /original/folder2/subfolder3/file1.txt
    test -f rel_folder/file3.txt
    test -f /workspace/rel_folder/file3.txt
  volumes:
  - name: original
    path: /original

substitutions:
  _VERSION: '1.2'

images: 
- 'gcr.io/$PROJECT_ID/cache:${_VERSION}'
- 'gcr.io/$PROJECT_ID/cache:latest'
- 'gcr.io/$PROJECT_ID/save_cache:${_VERSION}'
- 'gcr.io/$PROJECT_ID/save_cache:latest'
- 'gcr.io/$PROJECT_ID/restore_cache:${_VERSION}'
- 'gcr.io/$PROJECT_ID/restore_cache:latest'
tags: ['cloud-builders-community']
